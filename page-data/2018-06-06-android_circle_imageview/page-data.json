{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2018-06-06-android_circle_imageview/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Aris's Blog"}},"markdownRemark":{"id":"b8286044-8421-5883-82e4-8820f4937c68","excerpt":"Hello, todays post is about writing a custom android view, which is circle image view. The end result of this custom view would be something like in the below…","html":"<p>Hello, todays post is about writing a custom android view, which is circle image view.</p>\n<p>The end result of this custom view would be something like in the below figure:</p>\n<p><img src=\"/4e006516f78c985efeeb692c969046dc/figure.gif\" alt=\"fig1\"></p>\n<!--more-->\n<blockquote>\n<p>If you just want to use the library go to the github repo and read the usage instructions.\nIt is available <a href=\"https://github.com/abdularis/CircularImageView\">here</a></p>\n</blockquote>\n<p>This circle image view will have:</p>\n<ul>\n<li>Border drawn around the circle</li>\n<li>Highlight the circle when touched</li>\n<li>The image would be scaled, cropped and centered automatically</li>\n<li>Touch event only happened when we touched inside the circle</li>\n</ul>\n<h2>The Whole Class Codes</h2>\n<p>Before we start, I want to show you the whole code first (see the github repo also), I might not explain all line by line you could understand it better by your self, in this article i’ll explain the key things that I think important</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> DEF_PRESS_HIGHLIGHT_COLOR <span class=\"token operator\">=</span> <span class=\"token number\">0x32000000</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Shader</span> mBitmapShader<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Matrix</span> mShaderMatrix<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RectF</span> mBitmapDrawBounds<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RectF</span> mStrokeBounds<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Bitmap</span> mBitmap<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Paint</span> mBitmapPaint<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Paint</span> mStrokePaint<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Paint</span> mPressedPaint<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> mInitialized<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> mPressed<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> mHighlightEnable<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CircleImageView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CircleImageView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">AttributeSet</span> attrs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> strokeColor <span class=\"token operator\">=</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span>TRANSPARENT<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> strokeWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> highlightEnable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> highlightColor <span class=\"token operator\">=</span> DEF_PRESS_HIGHLIGHT_COLOR<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attrs <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">TypedArray</span> a <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">obtainStyledAttributes</span><span class=\"token punctuation\">(</span>attrs<span class=\"token punctuation\">,</span> <span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>styleable<span class=\"token punctuation\">.</span>CircleImageView<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            strokeColor <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>styleable<span class=\"token punctuation\">.</span>CircleImageView_strokeColor<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span>TRANSPARENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            strokeWidth <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">getDimensionPixelSize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>styleable<span class=\"token punctuation\">.</span>CircleImageView_strokeWidth<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            highlightEnable <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">getBoolean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>styleable<span class=\"token punctuation\">.</span>CircleImageView_highlightEnable<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            highlightColor <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>styleable<span class=\"token punctuation\">.</span>CircleImageView_highlightColor<span class=\"token punctuation\">,</span> DEF_PRESS_HIGHLIGHT_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            a<span class=\"token punctuation\">.</span><span class=\"token function\">recycle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        mShaderMatrix <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Matrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mBitmapPaint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint</span><span class=\"token punctuation\">.</span>ANTI_ALIAS_FLAG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokePaint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint</span><span class=\"token punctuation\">.</span>ANTI_ALIAS_FLAG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokeBounds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RectF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mBitmapDrawBounds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RectF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>strokeColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint<span class=\"token punctuation\">.</span>Style</span><span class=\"token punctuation\">.</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span>strokeWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        mPressedPaint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint</span><span class=\"token punctuation\">.</span>ANTI_ALIAS_FLAG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mPressedPaint<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>highlightColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mPressedPaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint<span class=\"token punctuation\">.</span>Style</span><span class=\"token punctuation\">.</span>FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        mHighlightEnable <span class=\"token operator\">=</span> highlightEnable<span class=\"token punctuation\">;</span>\n        mInitialized <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">setupBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setImageResource</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@DrawableRes</span> <span class=\"token keyword\">int</span> resId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">setImageResource</span><span class=\"token punctuation\">(</span>resId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setupBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setImageDrawable</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Drawable</span> drawable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">setImageDrawable</span><span class=\"token punctuation\">(</span>drawable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setupBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setImageBitmap</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Bitmap</span> bm<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">setImageBitmap</span><span class=\"token punctuation\">(</span>bm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setupBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setImageURI</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Uri</span> uri<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">setImageURI</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setupBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onSizeChanged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> oldw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> oldh<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onSizeChanged</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> oldw<span class=\"token punctuation\">,</span> oldh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">float</span> halfStrokeWidth <span class=\"token operator\">=</span> mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">updateCircleDrawBounds</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokeBounds<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokeBounds<span class=\"token punctuation\">.</span><span class=\"token function\">inset</span><span class=\"token punctuation\">(</span>halfStrokeWidth<span class=\"token punctuation\">,</span> halfStrokeWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">updateBitmapSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">boolean</span> processed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">case</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_DOWN<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isInCircle</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                processed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                mPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_CANCEL<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_UP<span class=\"token operator\">:</span>\n                processed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                mPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isInCircle</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> processed<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onDraw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">drawStroke</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">drawHighlight</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isHighlightEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> mHighlightEnable<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setHighlightEnable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> enable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mHighlightEnable <span class=\"token operator\">=</span> enable<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ColorInt</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getHighlightColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> mPressedPaint<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setHighlightColor</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@ColorInt</span> <span class=\"token keyword\">int</span> color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mPressedPaint<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@ColorInt</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getStrokeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setStrokeColor</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@ColorInt</span> <span class=\"token keyword\">int</span> color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Dimension</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Dimension</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawHighlight</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mHighlightEnable <span class=\"token operator\">&amp;&amp;</span> mPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            canvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawOval</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">,</span> mPressedPaint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawStroke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            canvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawOval</span><span class=\"token punctuation\">(</span>mStrokeBounds<span class=\"token punctuation\">,</span> mStrokePaint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        canvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawOval</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">,</span> mBitmapPaint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateCircleDrawBounds</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RectF</span> bounds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">float</span> contentWidth <span class=\"token operator\">=</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">getPaddingLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">getPaddingRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> contentHeight <span class=\"token operator\">=</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">getPaddingTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">getPaddingBottom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">float</span> left <span class=\"token operator\">=</span> <span class=\"token function\">getPaddingLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> top <span class=\"token operator\">=</span> <span class=\"token function\">getPaddingTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contentWidth <span class=\"token operator\">></span> contentHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            left <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>contentWidth <span class=\"token operator\">-</span> contentHeight<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            top <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>contentHeight <span class=\"token operator\">-</span> contentWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">float</span> diameter <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>contentWidth<span class=\"token punctuation\">,</span> contentHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bounds<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> left <span class=\"token operator\">+</span> diameter<span class=\"token punctuation\">,</span> top <span class=\"token operator\">+</span> diameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setupBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mInitialized<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        mBitmap <span class=\"token operator\">=</span> <span class=\"token function\">getBitmapFromDrawable</span><span class=\"token punctuation\">(</span><span class=\"token function\">getDrawable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mBitmap <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        mBitmapShader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BitmapShader</span><span class=\"token punctuation\">(</span>mBitmap<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mBitmapPaint<span class=\"token punctuation\">.</span><span class=\"token function\">setShader</span><span class=\"token punctuation\">(</span>mBitmapShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">updateBitmapSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateBitmapSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mBitmap <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">float</span> dx<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> dy<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> scale<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// scale up/down with respect to this view size and maintain aspect ratio</span>\n        <span class=\"token comment\">// translate bitmap position with dx/dy to the center of the image</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            scale <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dx <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span>\n            dy <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            scale <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dx <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dy <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        mShaderMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>scale<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mShaderMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">postTranslate</span><span class=\"token punctuation\">(</span>dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mBitmapShader<span class=\"token punctuation\">.</span><span class=\"token function\">setLocalMatrix</span><span class=\"token punctuation\">(</span>mShaderMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Bitmap</span> <span class=\"token function\">getBitmapFromDrawable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Drawable</span> drawable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>drawable <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>drawable <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">BitmapDrawable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BitmapDrawable</span><span class=\"token punctuation\">)</span> drawable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">Bitmap</span> bitmap <span class=\"token operator\">=</span> <span class=\"token class-name\">Bitmap</span><span class=\"token punctuation\">.</span><span class=\"token function\">createBitmap</span><span class=\"token punctuation\">(</span>\n                drawable<span class=\"token punctuation\">.</span><span class=\"token function\">getIntrinsicWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                drawable<span class=\"token punctuation\">.</span><span class=\"token function\">getIntrinsicHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">Bitmap<span class=\"token punctuation\">.</span>Config</span><span class=\"token punctuation\">.</span>ARGB_8888<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Canvas</span> canvas <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Canvas</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        drawable<span class=\"token punctuation\">.</span><span class=\"token function\">setBounds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        drawable<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> bitmap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isInCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// find the distance between center of the view and x,y point</span>\n        <span class=\"token keyword\">double</span> distance <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>\n                <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> x<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> distance <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Define custom view</h3>\n<p>Extend the <code class=\"language-text\">ImageView</code> class and define some fields to store the state and necessary things for drawing (rendering), also implement the required constructors. <code class=\"language-text\">CircleImageView(Context context)</code> constructor is the default constructor could be used when instantiating view programmatically, the second one used when we define view in the xml layout file.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">CircleImageView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CircleImageView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">AttributeSet</span> attrs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Define XML attributes</h3>\n<p>We need to specify what property we want to be able to customize using xml attributes, in this case we want to change stroke (border) color, set its width, enable/disable circle hightlight and specify the highlight color.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>declare-styleable</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CircleImageView<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attr</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>strokeColor<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">format</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>color<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attr</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>strokeWidth<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">format</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dimension<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attr</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>highlightEnable<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">format</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>boolean<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attr</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>highlightColor<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">format</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>color<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>declare-styleable</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3>Define fields</h3>\n<p>Declare member fields that we will be working with globally in the class</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> DEF_PRESS_HIGHLIGHT_COLOR <span class=\"token operator\">=</span> <span class=\"token number\">0x32000000</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Shader</span> mBitmapShader<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Matrix</span> mShaderMatrix<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RectF</span> mBitmapDrawBounds<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RectF</span> mStrokeBounds<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Bitmap</span> mBitmap<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Paint</span> mBitmapPaint<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Paint</span> mStrokePaint<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Paint</span> mPressedPaint<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> mInitialized<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> mPressed<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> mHighlightEnable<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Initialize fields</h3>\n<p>Initialize all fields we have defined above in the second contructor, when we specify this view attributes in xml layout file this constructor would be called with the AttributeSet parameter containing those xml attributes.\nFirst check if the AttributeSet is not null, if true then query all defined attributes.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CircleImageView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">AttributeSet</span> attrs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> strokeColor <span class=\"token operator\">=</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span>TRANSPARENT<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> strokeWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> highlightEnable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> highlightColor <span class=\"token operator\">=</span> DEF_PRESS_HIGHLIGHT_COLOR<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attrs <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">TypedArray</span> a <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">obtainStyledAttributes</span><span class=\"token punctuation\">(</span>attrs<span class=\"token punctuation\">,</span> <span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>styleable<span class=\"token punctuation\">.</span>CircleImageView<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            strokeColor <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>styleable<span class=\"token punctuation\">.</span>CircleImageView_strokeColor<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span>TRANSPARENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            strokeWidth <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">getDimensionPixelSize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>styleable<span class=\"token punctuation\">.</span>CircleImageView_strokeWidth<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            highlightEnable <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">getBoolean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>styleable<span class=\"token punctuation\">.</span>CircleImageView_highlightEnable<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            highlightColor <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>styleable<span class=\"token punctuation\">.</span>CircleImageView_highlightColor<span class=\"token punctuation\">,</span> DEF_PRESS_HIGHLIGHT_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            a<span class=\"token punctuation\">.</span><span class=\"token function\">recycle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        mShaderMatrix <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Matrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mBitmapPaint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint</span><span class=\"token punctuation\">.</span>ANTI_ALIAS_FLAG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokePaint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint</span><span class=\"token punctuation\">.</span>ANTI_ALIAS_FLAG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokeBounds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RectF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mBitmapDrawBounds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RectF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>strokeColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint<span class=\"token punctuation\">.</span>Style</span><span class=\"token punctuation\">.</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span>strokeWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        mPressedPaint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint</span><span class=\"token punctuation\">.</span>ANTI_ALIAS_FLAG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mPressedPaint<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>highlightColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mPressedPaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint<span class=\"token punctuation\">.</span>Style</span><span class=\"token punctuation\">.</span>FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        mHighlightEnable <span class=\"token operator\">=</span> highlightEnable<span class=\"token punctuation\">;</span>\n        mInitialized <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">setupBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>I’ll implement/explain <code class=\"language-text\">setupBitmap()</code> later</p>\n</blockquote>\n<p>we want to initialize/prepare bitmap when it was set before using xml attribute of the <code class=\"language-text\">ImageView</code> by calling <code class=\"language-text\">setupBitmap()</code>.\nwe call <code class=\"language-text\">super(context, attrs)</code> above so bitmap could already been made available by <code class=\"language-text\">ImageView</code> when we call <code class=\"language-text\">setupBitmap()</code>.</p>\n<h3>Preparing bitmap</h3>\n<p>Before drawing (rendering) it needs to prepare the bitmap and get ready to draw. <code class=\"language-text\">getBitmapFromDrawable(Drawable drawable)</code> method is responsible for converting the drawable into a <code class=\"language-text\">Bitmap</code>.\nIf the drawable is instance of <code class=\"language-text\">BitmapDrawable</code> cast it to Bitmap an return, if not we create bitmap ourselves and copy the drawable image content by using <code class=\"language-text\">Canvas</code> with the bitmap to draw into, finally draw drawable using <code class=\"language-text\">drawable.draw(canvas)</code> then return the bitmap.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Bitmap</span> <span class=\"token function\">getBitmapFromDrawable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Drawable</span> drawable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>drawable <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>drawable <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">BitmapDrawable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BitmapDrawable</span><span class=\"token punctuation\">)</span> drawable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">Bitmap</span> bitmap <span class=\"token operator\">=</span> <span class=\"token class-name\">Bitmap</span><span class=\"token punctuation\">.</span><span class=\"token function\">createBitmap</span><span class=\"token punctuation\">(</span>\n                drawable<span class=\"token punctuation\">.</span><span class=\"token function\">getIntrinsicWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                drawable<span class=\"token punctuation\">.</span><span class=\"token function\">getIntrinsicHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">Bitmap<span class=\"token punctuation\">.</span>Config</span><span class=\"token punctuation\">.</span>ARGB_8888<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Canvas</span> canvas <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Canvas</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        drawable<span class=\"token punctuation\">.</span><span class=\"token function\">setBounds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        drawable<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> bitmap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Implement methods to update the rectangle bounds where the circle would be drawn. <code class=\"language-text\">updateCircleDrawBounds(RectF bounds)</code> and call it in <code class=\"language-text\">onSizeChanged()</code> (we’ll update bounds when size of this view changed)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onSizeChanged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> oldw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> oldh<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...</span>\n\n        <span class=\"token function\">updateCircleDrawBounds</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateCircleDrawBounds</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RectF</span> bounds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">float</span> contentWidth <span class=\"token operator\">=</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">getPaddingLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">getPaddingRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> contentHeight <span class=\"token operator\">=</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">getPaddingTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">getPaddingBottom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">float</span> left <span class=\"token operator\">=</span> <span class=\"token function\">getPaddingLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> top <span class=\"token operator\">=</span> <span class=\"token function\">getPaddingTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// we'll center bounds by translating left/top</span>\n        <span class=\"token comment\">// so that the rendered circle always in the center of view</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contentWidth <span class=\"token operator\">></span> contentHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            left <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>contentWidth <span class=\"token operator\">-</span> contentHeight<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            top <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>contentHeight <span class=\"token operator\">-</span> contentWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// we want to make this bounds always square (aspect ratio of 1:1)</span>\n        <span class=\"token keyword\">float</span> diameter <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>contentWidth<span class=\"token punctuation\">,</span> contentHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bounds<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> left <span class=\"token operator\">+</span> diameter<span class=\"token punctuation\">,</span> top <span class=\"token operator\">+</span> diameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next,<code class=\"language-text\">setupBitmap()</code> method is used to setup the bitmap so it’s ready to draw. First check if it’s initialized or not. Use function we have implemeted above <code class=\"language-text\">getBitmapFromDrawable(getDrawable())</code> to get the bitmap with <code class=\"language-text\">getDrawable()</code> to get image view drawable.\nWe used <code class=\"language-text\">BitmapShader</code>, <code class=\"language-text\">Shader</code> is class that represent and return horizontal spans of color during drawing using a Paint object.<code class=\"language-text\">BitmapShader</code> is used to draw a texture (bitmap) on the area defined by the <code class=\"language-text\">Canvas</code> draw command using a Paint that <code class=\"language-text\">BitmapShader</code> is assign to.\n<code class=\"language-text\">Shader.TileMode.CLAMP</code> Arguments in the <code class=\"language-text\">BitmapShader</code> constructor is tile mode and clamp means that we’d replicate/draw the edge color of the texture when it’s smaller than the area of the canvas that we can draw on.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setupBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mInitialized<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        mBitmap <span class=\"token operator\">=</span> <span class=\"token function\">getBitmapFromDrawable</span><span class=\"token punctuation\">(</span><span class=\"token function\">getDrawable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mBitmap <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        mBitmapShader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BitmapShader</span><span class=\"token punctuation\">(</span>mBitmap<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mBitmapPaint<span class=\"token punctuation\">.</span><span class=\"token function\">setShader</span><span class=\"token punctuation\">(</span>mBitmapShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">updateBitmapSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Notice we use <code class=\"language-text\">updateBitmapSize()</code> method, let’s implement it</p>\n</blockquote>\n<p>This method is used to resize (scale up/down) the bitmap in the <code class=\"language-text\">BitmapShader</code> based on the size of view while maintaining aspect ratio of bitmap. We use <code class=\"language-text\">Matrix</code> to transform (scale and translation) bitmap. This will a little bit more involved.</p>\n<blockquote>\n<p>More explanation is in the code</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateBitmapSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mBitmap <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// trainslate bitmap in the BitmapShader using dx and dy so that it's centered</span>\n        <span class=\"token keyword\">float</span> dx<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> dy<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// scale factor</span>\n        <span class=\"token keyword\">float</span> scale<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// scale up/down with respect to this view size and maintain aspect ratio</span>\n        <span class=\"token comment\">// translate bitmap position with dx/dy to the center of the image</span>\n        <span class=\"token comment\">//</span>\n        <span class=\"token comment\">// check do we want to scale based on width or height</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        \t<span class=\"token comment\">// if bitmp with is less than its height, we wanna scale based on its width</span>\n            <span class=\"token comment\">// assign scale factor based on difference (ratio) between bitmap width and bitmap draw bounds</span>\n            scale <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// because we know that the scale was based on width, the width would fit</span>\n            <span class=\"token comment\">// exaclty with bounds, so we just translate x with its left padding</span>\n            dx <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// we want to center y(height) axis of the scaled bitmap,</span>\n            <span class=\"token comment\">// the logial way to see this is:</span>\n            <span class=\"token comment\">// at the first state bitmap would rendered at the top left area</span>\n            <span class=\"token comment\">// by translating with top padding of the view,</span>\n            <span class=\"token comment\">// translate up by half of bitmap height (so center of bitmap now in the top of the view),</span>\n            <span class=\"token comment\">// translate down by half of the bitmap bounds (so center of bitmap would be in the center of the view (bitmap bounds))</span>\n            dy <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        \t<span class=\"token comment\">// the same concept goes the same here, the difference is we</span>\n            <span class=\"token comment\">// translate (center) horizontal axis instead of vertical/y axis</span>\n            scale <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dx <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>mBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dy <span class=\"token operator\">=</span> mBitmapDrawBounds<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// apply this transformation into shader matrix -> bitmap shader</span>\n        mShaderMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>scale<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mShaderMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">postTranslate</span><span class=\"token punctuation\">(</span>dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mBitmapShader<span class=\"token punctuation\">.</span><span class=\"token function\">setLocalMatrix</span><span class=\"token punctuation\">(</span>mShaderMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Drawing</h3>\n<p>At this point so far we are ready to do some drawing :). The code is straighforward, so let’s do that</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// ...</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onDraw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">drawStroke</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">drawHighlight</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ...</span>\n\n\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawHighlight</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mHighlightEnable <span class=\"token operator\">&amp;&amp;</span> mPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            canvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawOval</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">,</span> mPressedPaint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawStroke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mStrokePaint<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            canvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawOval</span><span class=\"token punctuation\">(</span>mStrokeBounds<span class=\"token punctuation\">,</span> mStrokePaint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \t<span class=\"token comment\">// we draw an oval shape using draw bounds that we have set to always square and it would draw a circle in it</span>\n        <span class=\"token comment\">// also the bitmap paint is set with the bitmap shader so the color</span>\n        <span class=\"token comment\">// of the shape is the bitmap itself</span>\n        canvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawOval</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">,</span> mBitmapPaint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Override <code class=\"language-text\">onDraw()</code> method, it’ll be called automatically by the framework when we call <code class=\"language-text\">invalidate()</code> or when it needs to be redrawn.</p>\n<h3>Touch event</h3>\n<p>Override <code class=\"language-text\">onTouchEvent()</code> method to receive events when view is touched.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// ...</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">boolean</span> processed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">case</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_DOWN<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isInCircle</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                processed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                mPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_CANCEL<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_UP<span class=\"token operator\">:</span>\n                processed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                mPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isInCircle</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> processed<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// ...</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isInCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// find the distance between center of the view and x,y point</span>\n        <span class=\"token keyword\">double</span> distance <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>\n                <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> x<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> distance <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span>mBitmapDrawBounds<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">isInCircle()</code> method is used to check if the touch coordinate x,y inside the circle view (bitmap) that we have drawn, in other words it’ll emit touch event when someone touch inside the circle not anywhere on the view.</p>","frontmatter":{"title":"Creating Custom Circle Image View for Android","date":"June 06, 2018","description":null}},"previous":{"fields":{"slug":"/2018-06-06-scroll_parallax_image_view/"},"frontmatter":{"title":"Android Custom View Tutorial: Scroll Parallax Image View"}},"next":{"fields":{"slug":"/2018-06-20-android_avatar_imageview/"},"frontmatter":{"title":"Extending Circle Image View to Create Circle Avatar Image View"}}},"pageContext":{"id":"b8286044-8421-5883-82e4-8820f4937c68","previousPostId":"90f50e3a-e9f4-5b86-8a38-242cb22674a2","nextPostId":"11ce7274-3395-5d00-81e1-0dac462f277e"}},
    "staticQueryHashes": ["2841359383","3257411868"]}